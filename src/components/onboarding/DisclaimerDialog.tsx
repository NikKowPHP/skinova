"use client";

import { useState } from "react";
import { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";

interface DisclaimerDialogProps {
  isOpen: boolean;
  onAccept: () => void;
}

export function DisclaimerDialog({ isOpen, onAccept }: DisclaimerDialogProps) {
  const [isChecked, setIsChecked] = useState(false);

  return (
    <Dialog open={isOpen}>
      <DialogContent showCloseButton={false}>
        <DialogHeader>
          <DialogTitle>AI Analysis Disclaimer</DialogTitle>
          <DialogDescription>
            Please read and acknowledge the following before you proceed.
          </DialogDescription>
        </DialogHeader>
        <div className="py-4 space-y-4 text-sm text-muted-foreground">
          <p>
            The analysis provided by Skinova is generated by an artificial intelligence model and is for informational purposes only.
          </p>
          <p>
            It is <strong className="text-foreground">not a substitute for professional medical advice, diagnosis, or treatment.</strong> Always seek the advice of a qualified health provider with any questions you may have regarding a medical condition. Never disregard professional medical advice or delay in seeking it because of something you have read on this application.
          </p>
        </div>
        <div className="flex items-center space-x-2">
          <Checkbox id="accept-disclaimer" checked={isChecked} onCheckedChange={(checked) => setIsChecked(checked as boolean)} />
          <Label htmlFor="accept-disclaimer" className="text-sm font-normal">
            I understand that the AI analysis is not medical advice.
          </Label>
        </div>
        <DialogFooter>
          <Button onClick={onAccept} disabled={!isChecked}>
            Continue
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
}